{
  "openapi": "3.1.0",
  "info": {
    "title": "riderunivers",
    "version": "0.0.1"
  },
  "servers": [
    {
      "url": "https://riderbackend.sefapanel.com/api"
    }
  ],
  "paths": {
    "/login": {
      "post": {
        "operationId": "login",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "token"
                  ]
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/register": {
      "post": {
        "operationId": "register",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "nom": {
                    "type": "string",
                    "maxLength": 255
                  },
                  "prenoms": {
                    "type": "string",
                    "maxLength": 255
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "maxLength": 255
                  },
                  "password": {
                    "type": "string",
                    "minLength": 8
                  },
                  "password_confirmation": {
                    "type": "string",
                    "minLength": 8
                  }
                },
                "required": [
                  "nom",
                  "prenoms",
                  "email",
                  "password",
                  "password_confirmation"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string"
                    },
                    "user": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "token",
                    "user"
                  ]
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/forgot-password": {
      "post": {
        "operationId": "password.email",
        "summary": "Envoie un lien de réinitialisation de mot de passe à l'utilisateur",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  }
                },
                "required": [
                  "email"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Lien de réinitialisation envoyé avec succès"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/reset-password": {
      "post": {
        "operationId": "password.reset",
        "summary": "Réinitialise le mot de passe de l'utilisateur",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 8
                  },
                  "password_confirmation": {
                    "type": "string",
                    "minLength": 8
                  }
                },
                "required": [
                  "token",
                  "email",
                  "password",
                  "password_confirmation"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Mot de passe réinitialisé avec succès"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/users/me/challenges": {
      "get": {
        "operationId": "users.me.challenges",
        "summary": "Obtenir les défis auxquels l'utilisateur participe",
        "tags": [
          "Challenge"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "active_challenges": {
                      "type": "string"
                    },
                    "completed_challenges": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "active_challenges",
                    "completed_challenges"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/challenges": {
      "get": {
        "operationId": "challenges.index",
        "summary": "Afficher tous les défis actifs",
        "tags": [
          "Challenge"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "challenges": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "challenges"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/challenges/my-challenges": {
      "get": {
        "operationId": "challenges.my-challenges",
        "summary": "Obtenir les défis auxquels l'utilisateur participe",
        "tags": [
          "Challenge"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "active_challenges": {
                      "type": "string"
                    },
                    "completed_challenges": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "active_challenges",
                    "completed_challenges"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/challenges/{id}": {
      "get": {
        "operationId": "challenges.show",
        "summary": "Afficher un défi spécifique",
        "tags": [
          "Challenge"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "challenge": {
                      "type": "string"
                    },
                    "is_participating": {
                      "type": "boolean"
                    },
                    "user_progress": {
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "progress_distance": {
                          "type": "string"
                        },
                        "completed": {
                          "type": "string"
                        },
                        "percentage": {
                          "anyOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "integer",
                              "enum": [
                                0
                              ]
                            }
                          ]
                        }
                      },
                      "required": [
                        "progress_distance",
                        "completed",
                        "percentage"
                      ]
                    },
                    "leaderboard": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "challenge",
                    "is_participating",
                    "user_progress",
                    "leaderboard"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/challenges/{id}/join": {
      "post": {
        "operationId": "challenges.join",
        "summary": "Rejoindre un défi",
        "tags": [
          "Challenge"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Vous avez rejoint le défi avec succès"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Vous participez déjà à ce défi"
                        }
                      },
                      "required": [
                        "message"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Ce défi est terminé"
                        }
                      },
                      "required": [
                        "message"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/challenges/{id}/leave": {
      "delete": {
        "operationId": "challenges.leave",
        "summary": "Quitter un défi",
        "tags": [
          "Challenge"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Vous avez quitté le défi avec succès"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Vous ne participez pas à ce défi"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/challenges/{id}/progress": {
      "put": {
        "operationId": "challenges.update-progress",
        "summary": "Mettre à jour la progression de l'utilisateur pour un défi",
        "tags": [
          "Challenge"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "progress_distance": {
                    "type": "number",
                    "minimum": 0
                  }
                },
                "required": [
                  "progress_distance"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Progression mise à jour avec succès"
                    },
                    "progress": {
                      "type": "object",
                      "properties": {
                        "progress_distance": {
                          "type": "string"
                        },
                        "completed": {
                          "type": "string"
                        },
                        "percentage": {
                          "anyOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "integer",
                              "enum": [
                                0
                              ]
                            }
                          ]
                        }
                      },
                      "required": [
                        "progress_distance",
                        "completed",
                        "percentage"
                      ]
                    }
                  },
                  "required": [
                    "message",
                    "progress"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Ce défi est terminé, vous ne pouvez plus mettre à jour votre progression"
                        }
                      },
                      "required": [
                        "message"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Vous ne participez pas à ce défi"
                        }
                      },
                      "required": [
                        "message"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/users/me/events": {
      "get": {
        "operationId": "users.me.events",
        "summary": "Obtenir les événements auxquels l'utilisateur participe",
        "tags": [
          "Event"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "organized_events": {
                      "type": "string"
                    },
                    "participated_events": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "organized_events",
                    "participated_events"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/events": {
      "get": {
        "operationId": "events.index",
        "summary": "Afficher tous les événements",
        "tags": [
          "Event"
        ],
        "parameters": [
          {
            "name": "latitude",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "longitude",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "radius",
            "in": "query",
            "schema": {
              "type": "number",
              "minimum": 1,
              "maximum": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "events": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "events"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      },
      "post": {
        "operationId": "events.store",
        "summary": "Créer un nouvel événement",
        "tags": [
          "Event"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "maxLength": 255
                  },
                  "description": {
                    "type": "string"
                  },
                  "date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "max_participants": {
                    "type": "integer",
                    "minimum": 2,
                    "maximum": 100
                  },
                  "location": {
                    "type": "object",
                    "properties": {
                      "latitude": {
                        "type": "number"
                      },
                      "longitude": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "latitude",
                      "longitude"
                    ]
                  }
                },
                "required": [
                  "title",
                  "description",
                  "date",
                  "max_participants",
                  "location"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Événement créé avec succès"
                    },
                    "event": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "event"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/events/my-events": {
      "get": {
        "operationId": "events.my-events",
        "summary": "Obtenir les événements auxquels l'utilisateur participe",
        "tags": [
          "Event"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "organized_events": {
                      "type": "string"
                    },
                    "participated_events": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "organized_events",
                    "participated_events"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/events/{id}": {
      "get": {
        "operationId": "events.show",
        "summary": "Afficher un événement spécifique",
        "tags": [
          "Event"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "event": {
                      "type": "string"
                    },
                    "is_participant": {
                      "type": "string"
                    },
                    "is_organizer": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "event",
                    "is_participant",
                    "is_organizer"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          }
        }
      },
      "put": {
        "operationId": "events.update",
        "summary": "Mettre à jour un événement",
        "tags": [
          "Event"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "maxLength": 255
                  },
                  "description": {
                    "type": "string"
                  },
                  "date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "max_participants": {
                    "type": "integer",
                    "minimum": 2,
                    "maximum": 100
                  },
                  "location": {
                    "type": "object",
                    "properties": {
                      "latitude": {
                        "type": "number"
                      },
                      "longitude": {
                        "type": "number"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Événement mis à jour avec succès"
                    },
                    "event": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "event"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Vous n'êtes pas autorisé à modifier cet événement"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      },
      "delete": {
        "operationId": "events.destroy",
        "summary": "Supprimer un événement",
        "tags": [
          "Event"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Événement supprimé avec succès"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Vous n'êtes pas autorisé à supprimer cet événement"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/events/{id}/join": {
      "post": {
        "operationId": "events.join",
        "summary": "Rejoindre un événement",
        "tags": [
          "Event"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Vous avez rejoint l'événement avec succès"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Vous participez déjà à cet événement"
                        }
                      },
                      "required": [
                        "message"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Cet événement est complet"
                        }
                      },
                      "required": [
                        "message"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/events/{id}/leave": {
      "delete": {
        "operationId": "events.leave",
        "summary": "Quitter un événement",
        "tags": [
          "Event"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Vous avez quitté l'événement avec succès"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Vous ne participez pas à cet événement"
                        }
                      },
                      "required": [
                        "message"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "En tant qu'organisateur, vous ne pouvez pas quitter l'événement. Vous devez le supprimer ou transférer l'organisation."
                        }
                      },
                      "required": [
                        "message"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/friends": {
      "get": {
        "operationId": "friends.index",
        "summary": "Afficher la liste des amis",
        "tags": [
          "Friend"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "friends": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "friends"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/friends/pending": {
      "get": {
        "operationId": "friends.pending",
        "summary": "Afficher les demandes d'amitié en attente",
        "tags": [
          "Friend"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "sent_requests": {
                      "type": "string"
                    },
                    "received_requests": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "sent_requests",
                    "received_requests"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/friends/request": {
      "post": {
        "operationId": "friends.send-request",
        "summary": "Envoyer une demande d'ami",
        "tags": [
          "Friend"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "friend_id": {
                    "type": "integer"
                  }
                },
                "required": [
                  "friend_id"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Demande d'ami envoyée avec succès"
                    },
                    "friendship": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "friendship"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Vous ne pouvez pas envoyer une demande d'ami à cette personne"
                        }
                      },
                      "required": [
                        "message"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Une demande d'ami est déjà en cours"
                        }
                      },
                      "required": [
                        "message"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Vous êtes déjà ami avec cette personne"
                        }
                      },
                      "required": [
                        "message"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Vous ne pouvez pas vous envoyer une demande d'ami à vous-même"
                        }
                      },
                      "required": [
                        "message"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/friends/accept/{id}": {
      "put": {
        "operationId": "friends.accept",
        "summary": "Accepter une demande d'ami",
        "tags": [
          "Friend"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Demande d'ami acceptée avec succès"
                    },
                    "friendship": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "friendship"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Cette demande d'ami ne peut pas être acceptée"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Vous n'êtes pas autorisé à accepter cette demande d'ami"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/friends/reject/{id}": {
      "put": {
        "operationId": "friends.reject",
        "summary": "Refuser une demande d'ami",
        "tags": [
          "Friend"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Demande d'ami refusée avec succès"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Cette demande d'ami ne peut pas être refusée"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Vous n'êtes pas autorisé à refuser cette demande d'ami"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/friends/{id}": {
      "delete": {
        "operationId": "friends.remove",
        "summary": "Supprimer un ami",
        "tags": [
          "Friend"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Ami supprimé avec succès"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Relation d'amitié non trouvée"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/friends/block": {
      "post": {
        "operationId": "friends.block",
        "summary": "Bloquer un utilisateur",
        "tags": [
          "Friend"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user_id": {
                    "type": "integer"
                  }
                },
                "required": [
                  "user_id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Utilisateur bloqué avec succès"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Vous ne pouvez pas vous bloquer vous-même"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/friends/unblock/{id}": {
      "delete": {
        "operationId": "friends.unblock",
        "summary": "Débloquer un utilisateur",
        "tags": [
          "Friend"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Utilisateur débloqué avec succès"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Relation de blocage non trouvée"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/friends/blocked": {
      "get": {
        "operationId": "friends.blocked",
        "summary": "Obtenir la liste des utilisateurs bloqués",
        "tags": [
          "Friend"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "blocked_users": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "blocked_users"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/messages/conversations": {
      "get": {
        "operationId": "messages.conversations",
        "summary": "Obtenir la liste des conversations",
        "tags": [
          "Message"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "conversations": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "conversations"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/messages/user/{userId}": {
      "get": {
        "operationId": "messages.get",
        "summary": "Obtenir les messages d'une conversation",
        "tags": [
          "Message"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "nom": {
                          "type": "string"
                        },
                        "prenoms": {
                          "type": "string"
                        },
                        "avatar": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "nom",
                        "prenoms",
                        "avatar"
                      ]
                    },
                    "messages": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "user",
                    "messages"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Conversation inaccessible"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/messages": {
      "post": {
        "operationId": "messages.send",
        "summary": "Envoyer un message",
        "tags": [
          "Message"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "receiver_id": {
                    "type": "integer"
                  },
                  "message_text": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "message_type": {
                    "type": "string",
                    "enum": [
                      "text",
                      "image",
                      "video"
                    ]
                  },
                  "media": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "binary",
                    "contentMediaType": "application/octet-stream",
                    "maxLength": 10240
                  }
                },
                "required": [
                  "receiver_id",
                  "message_type"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Message envoyé avec succès"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "message_text": {
                          "type": "string"
                        },
                        "message_type": {
                          "type": "string"
                        },
                        "media_url": {
                          "type": "string"
                        },
                        "created_at": {
                          "type": "string"
                        },
                        "is_sender": {
                          "type": "boolean"
                        },
                        "read": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "id",
                        "message_text",
                        "message_type",
                        "media_url",
                        "created_at",
                        "is_sender",
                        "read"
                      ]
                    }
                  },
                  "required": [
                    "message",
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Vous ne pouvez pas vous envoyer un message à vous-même"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Vous ne pouvez pas envoyer de messages à cet utilisateur"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/messages/{id}": {
      "delete": {
        "operationId": "messages.delete",
        "summary": "Supprimer un message",
        "tags": [
          "Message"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Message supprimé avec succès"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Vous n'êtes pas autorisé à supprimer ce message"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/messages/{id}/read": {
      "put": {
        "operationId": "messages.read",
        "summary": "Marquer un message comme lu",
        "tags": [
          "Message"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Message marqué comme lu"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Vous n'êtes pas autorisé à marquer ce message comme lu"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/permissions": {
      "get": {
        "operationId": "permissions.index",
        "tags": [
          "Permission"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "`PermissionCollection`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/PermissionCollection"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "post": {
        "operationId": "permissions.store",
        "tags": [
          "Permission"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 64
                  },
                  "roles": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "`PermissionResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/PermissionResource"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/permissions/{permission}": {
      "get": {
        "operationId": "permissions.show",
        "tags": [
          "Permission"
        ],
        "parameters": [
          {
            "name": "permission",
            "in": "path",
            "required": true,
            "description": "The permission ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "`PermissionResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/PermissionResource"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          }
        }
      },
      "put": {
        "operationId": "permissions.update",
        "tags": [
          "Permission"
        ],
        "parameters": [
          {
            "name": "permission",
            "in": "path",
            "required": true,
            "description": "The permission ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 40
                  },
                  "roles": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "`PermissionResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/PermissionResource"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      },
      "delete": {
        "operationId": "permissions.destroy",
        "tags": [
          "Permission"
        ],
        "parameters": [
          {
            "name": "permission",
            "in": "path",
            "required": true,
            "description": "The permission ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          }
        }
      }
    },
    "/users/me/posts": {
      "get": {
        "operationId": "users.me.posts",
        "summary": "Récupère les posts de l'utilisateur connecté",
        "tags": [
          "Post"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string",
                      "example": "Une erreur est survenue lors de la récupération des posts"
                    }
                  },
                  "required": [
                    "success",
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/posts": {
      "get": {
        "operationId": "posts.index",
        "summary": "Afficher tous les posts (fil d'actualité)",
        "tags": [
          "Post"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "posts": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "posts"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "post": {
        "operationId": "posts.store",
        "summary": "Créer un nouveau post",
        "tags": [
          "Post"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "caption": {
                    "type": "string",
                    "maxLength": 1000
                  },
                  "image": {
                    "type": "string",
                    "format": "binary",
                    "contentMediaType": "application/octet-stream",
                    "maxLength": 10240
                  }
                },
                "required": [
                  "caption"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Post créé avec succès"
                    },
                    "post": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "post"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/posts/user/{userId}": {
      "get": {
        "operationId": "posts.user-posts",
        "summary": "Afficher les posts d'un utilisateur spécifique",
        "tags": [
          "Post"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "nom": {
                          "type": "string"
                        },
                        "prenoms": {
                          "type": "string"
                        },
                        "avatar": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "nom",
                        "prenoms",
                        "avatar"
                      ]
                    },
                    "posts": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "user",
                    "posts"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/posts/{id}": {
      "get": {
        "operationId": "posts.show",
        "summary": "Afficher un post spécifique",
        "tags": [
          "Post"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "post": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "post"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          }
        }
      },
      "put": {
        "operationId": "posts.update",
        "summary": "Mettre à jour un post",
        "tags": [
          "Post"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "caption": {
                    "type": "string",
                    "maxLength": 1000
                  }
                },
                "required": [
                  "caption"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Post mis à jour avec succès"
                    },
                    "post": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "post"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Vous n'êtes pas autorisé à modifier ce post"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      },
      "delete": {
        "operationId": "posts.destroy",
        "summary": "Supprimer un post",
        "tags": [
          "Post"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Post supprimé avec succès"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Vous n'êtes pas autorisé à supprimer ce post"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/profile": {
      "get": {
        "operationId": "profile.show",
        "summary": "Obtenir le profil de l'utilisateur connecté",
        "tags": [
          "Profile"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "user"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      },
      "put": {
        "operationId": "profile.update",
        "summary": "Mettre à jour le profil de l'utilisateur",
        "tags": [
          "Profile"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "nom": {
                    "type": "string",
                    "maxLength": 255
                  },
                  "prenoms": {
                    "type": "string",
                    "maxLength": 255
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "maxLength": 255
                  },
                  "bio": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "telephone": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "ville": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "discipline": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "niveau": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "dark_mode": {
                    "type": "boolean"
                  },
                  "settings": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "avatar": {
                    "type": "string",
                    "format": "binary",
                    "contentMediaType": "application/octet-stream",
                    "maxLength": 2048
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Profil mis à jour avec succès"
                    },
                    "user": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "user"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/profile/location": {
      "put": {
        "operationId": "profile.update-location",
        "summary": "Mettre à jour la position géographique de l'utilisateur",
        "tags": [
          "Profile"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "latitude": {
                    "type": "number"
                  },
                  "longitude": {
                    "type": "number"
                  }
                },
                "required": [
                  "latitude",
                  "longitude"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Localisation mise à jour avec succès"
                    },
                    "location": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "location"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/profile/battery": {
      "put": {
        "operationId": "profile.update-battery",
        "summary": "Mettre à jour le niveau de batterie",
        "tags": [
          "Profile"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "battery_level": {
                    "type": "number",
                    "minimum": 0,
                    "maximum": 100
                  }
                },
                "required": [
                  "battery_level"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Niveau de batterie mis à jour avec succès"
                    },
                    "battery_level": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "battery_level"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/profile/avatar": {
      "post": {
        "operationId": "profile.update-avatar",
        "summary": "Télécharger et mettre à jour l'avatar de l'utilisateur",
        "tags": [
          "Profile"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "avatar": {
                    "type": "string",
                    "format": "binary",
                    "contentMediaType": "application/octet-stream",
                    "maxLength": 2048
                  }
                },
                "required": [
                  "avatar"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Avatar mis à jour avec succès"
                    },
                    "avatar_url": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "avatar_url"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/profile/password": {
      "put": {
        "operationId": "profile.update-password",
        "summary": "Mettre à jour le mot de passe de l'utilisateur",
        "tags": [
          "Profile"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "current_password": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 8
                  },
                  "password_confirmation": {
                    "type": "string",
                    "minLength": 8
                  }
                },
                "required": [
                  "current_password",
                  "password",
                  "password_confirmation"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Mot de passe mis à jour avec succès"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/profile/nearby-riders": {
      "get": {
        "operationId": "profile.nearby-riders",
        "summary": "Obtenir les cyclistes proches",
        "tags": [
          "Profile"
        ],
        "parameters": [
          {
            "name": "radius",
            "in": "query",
            "schema": {
              "type": "number",
              "minimum": 0.1,
              "maximum": 50
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "nearby_riders": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "nearby_riders"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Veuillez mettre à jour votre position avant de chercher des cyclistes à proximité"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/rides": {
      "get": {
        "operationId": "rides.index",
        "summary": "Afficher tous les trajets de l'utilisateur",
        "tags": [
          "Ride"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "rides": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "rides"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/rides/stats": {
      "get": {
        "operationId": "rides.stats",
        "summary": "Obtenir les statistiques globales des trajets de l'utilisateur",
        "tags": [
          "Ride"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "stats": {
                      "type": "object",
                      "properties": {
                        "total_rides": {
                          "type": "string"
                        },
                        "total_distance": {
                          "type": "string"
                        },
                        "total_duration": {
                          "type": "string"
                        },
                        "average_speed": {
                          "anyOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "integer",
                              "enum": [
                                0
                              ]
                            }
                          ]
                        },
                        "week_distance": {
                          "type": "string"
                        },
                        "month_distance": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "total_rides",
                        "total_distance",
                        "total_duration",
                        "average_speed",
                        "week_distance",
                        "month_distance"
                      ]
                    }
                  },
                  "required": [
                    "stats"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/rides/{id}": {
      "get": {
        "operationId": "rides.show",
        "summary": "Afficher un trajet spécifique",
        "tags": [
          "Ride"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ride": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "ride"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Vous n'êtes pas autorisé à voir ce trajet"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "rides.destroy",
        "summary": "Supprimer un trajet",
        "tags": [
          "Ride"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Trajet supprimé avec succès"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "total_distance": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "total_distance"
                      ]
                    }
                  },
                  "required": [
                    "message",
                    "user"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Vous n'êtes pas autorisé à supprimer ce trajet"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/rides/start": {
      "post": {
        "operationId": "rides.start",
        "summary": "Commencer un nouveau trajet",
        "tags": [
          "Ride"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "start_location": {
                    "type": "object",
                    "properties": {
                      "latitude": {
                        "type": "number"
                      },
                      "longitude": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "latitude",
                      "longitude"
                    ]
                  }
                },
                "required": [
                  "start_location"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Trajet commencé avec succès"
                    },
                    "ride": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "ride"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Un trajet est déjà en cours"
                    },
                    "ride": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "ride"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/rides/end": {
      "post": {
        "operationId": "rides.end",
        "summary": "Terminer un trajet en cours",
        "tags": [
          "Ride"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "distance": {
                    "type": "number",
                    "minimum": 0
                  },
                  "duration": {
                    "type": "number",
                    "minimum": 0
                  },
                  "average_speed": {
                    "type": "number",
                    "minimum": 0
                  },
                  "battery_used": {
                    "type": "number",
                    "minimum": 0,
                    "maximum": 100
                  },
                  "map_polyline": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "end_location": {
                    "type": "object",
                    "properties": {
                      "latitude": {
                        "type": "number"
                      },
                      "longitude": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "latitude",
                      "longitude"
                    ]
                  }
                },
                "required": [
                  "distance",
                  "duration",
                  "average_speed",
                  "battery_used",
                  "end_location"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Trajet terminé avec succès"
                    },
                    "ride": {
                      "type": "string"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "total_distance": {
                          "type": "string"
                        },
                        "battery_level": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "total_distance",
                        "battery_level"
                      ]
                    }
                  },
                  "required": [
                    "message",
                    "ride",
                    "user"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Aucun trajet actif trouvé"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/roles": {
      "get": {
        "operationId": "roles.index",
        "tags": [
          "Role"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "`RoleCollection`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/RoleCollection"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "post": {
        "operationId": "roles.store",
        "tags": [
          "Role"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 32
                  },
                  "permissions": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "`RoleResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/RoleResource"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/roles/{role}": {
      "get": {
        "operationId": "roles.show",
        "tags": [
          "Role"
        ],
        "parameters": [
          {
            "name": "role",
            "in": "path",
            "required": true,
            "description": "The role ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "`RoleResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/RoleResource"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          }
        }
      },
      "put": {
        "operationId": "roles.update",
        "tags": [
          "Role"
        ],
        "parameters": [
          {
            "name": "role",
            "in": "path",
            "required": true,
            "description": "The role ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 32
                  },
                  "permissions": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "`RoleResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/RoleResource"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      },
      "delete": {
        "operationId": "roles.destroy",
        "tags": [
          "Role"
        ],
        "parameters": [
          {
            "name": "role",
            "in": "path",
            "required": true,
            "description": "The role ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          }
        }
      }
    },
    "/auth/{provider}": {
      "get": {
        "operationId": "social.redirect",
        "summary": "Redirige vers le fournisseur OAuth",
        "tags": [
          "SocialAuth"
        ],
        "parameters": [
          {
            "name": "provider",
            "in": "path",
            "required": true,
            "description": "Le fournisseur OAuth (ex. google)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "redirect_url": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "redirect_url"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/auth/{provider}/callback": {
      "get": {
        "operationId": "social.callback",
        "summary": "Traite la réponse du fournisseur OAuth et authentifie l'utilisateur",
        "tags": [
          "SocialAuth"
        ],
        "parameters": [
          {
            "name": "provider",
            "in": "path",
            "required": true,
            "description": "Le fournisseur OAuth (ex. google)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string"
                    },
                    "user": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "token",
                    "user"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Code d'autorisation manquant"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/auth/google/token": {
      "post": {
        "operationId": "social.google.token",
        "summary": "Authentifie l'utilisateur avec le token d'ID Google directement depuis l'application mobile",
        "tags": [
          "SocialAuth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id_token": {
                    "type": "string"
                  }
                },
                "required": [
                  "id_token"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string"
                    },
                    "user": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "token",
                    "user"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Token ID invalide"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/status-check": {
      "get": {
        "operationId": "status-check",
        "summary": "Vérifier le statut de l'API",
        "tags": [
          "Status"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "ok"
                    },
                    "message": {
                      "type": "string",
                      "example": "Le serveur est opérationnel"
                    },
                    "timestamp": {
                      "type": "string"
                    },
                    "version": {
                      "type": "string"
                    },
                    "environment": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message",
                    "timestamp",
                    "version",
                    "environment"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/ping": {
      "get": {
        "operationId": "ping",
        "summary": "Point d'accès léger pour vérifier rapidement la connexion au serveur\nUtilisé par l'application mobile pour tester la connectivité",
        "tags": [
          "Status"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "pong": {
                      "type": "boolean"
                    },
                    "time": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "pong",
                    "time"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/users/me/tournaments": {
      "get": {
        "operationId": "users.me.tournaments",
        "summary": "Obtenir les tournois auxquels l'utilisateur participe",
        "tags": [
          "Tournament"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "organized_tournaments": {
                      "type": "string"
                    },
                    "participated_tournaments": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "organized_tournaments",
                    "participated_tournaments"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/tournaments": {
      "get": {
        "operationId": "tournaments.index",
        "summary": "Afficher tous les tournois",
        "tags": [
          "Tournament"
        ],
        "parameters": [
          {
            "name": "latitude",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "longitude",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "radius",
            "in": "query",
            "schema": {
              "type": "number",
              "minimum": 1,
              "maximum": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "tournaments": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "tournaments"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      },
      "post": {
        "operationId": "tournaments.store",
        "summary": "Créer un nouveau tournoi",
        "tags": [
          "Tournament"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "maxLength": 255
                  },
                  "description": {
                    "type": "string"
                  },
                  "date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "max_participants": {
                    "type": "integer",
                    "minimum": 2,
                    "maximum": 100
                  },
                  "location": {
                    "type": "object",
                    "properties": {
                      "latitude": {
                        "type": "number"
                      },
                      "longitude": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "latitude",
                      "longitude"
                    ]
                  }
                },
                "required": [
                  "title",
                  "description",
                  "date",
                  "max_participants",
                  "location"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Tournoi créé avec succès"
                    },
                    "tournament": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "tournament"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/tournaments/my-tournaments": {
      "get": {
        "operationId": "tournaments.my-tournaments",
        "summary": "Obtenir les tournois auxquels l'utilisateur participe",
        "tags": [
          "Tournament"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "organized_tournaments": {
                      "type": "string"
                    },
                    "participated_tournaments": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "organized_tournaments",
                    "participated_tournaments"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/tournaments/{id}": {
      "get": {
        "operationId": "tournaments.show",
        "summary": "Afficher un tournoi spécifique",
        "tags": [
          "Tournament"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "tournament": {
                      "type": "string"
                    },
                    "is_participant": {
                      "type": "string"
                    },
                    "is_organizer": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "tournament",
                    "is_participant",
                    "is_organizer"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          }
        }
      },
      "put": {
        "operationId": "tournaments.update",
        "summary": "Mettre à jour un tournoi",
        "tags": [
          "Tournament"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "maxLength": 255
                  },
                  "description": {
                    "type": "string"
                  },
                  "date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "max_participants": {
                    "type": "integer",
                    "minimum": 2,
                    "maximum": 100
                  },
                  "video_url": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "uri"
                  },
                  "location": {
                    "type": "object",
                    "properties": {
                      "latitude": {
                        "type": "number"
                      },
                      "longitude": {
                        "type": "number"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Tournoi mis à jour avec succès"
                    },
                    "tournament": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "tournament"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Vous n'êtes pas autorisé à modifier ce tournoi"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      },
      "delete": {
        "operationId": "tournaments.destroy",
        "summary": "Supprimer un tournoi",
        "tags": [
          "Tournament"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Tournoi supprimé avec succès"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Vous n'êtes pas autorisé à supprimer ce tournoi"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/tournaments/{id}/join": {
      "post": {
        "operationId": "tournaments.join",
        "summary": "Rejoindre un tournoi",
        "tags": [
          "Tournament"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Vous avez rejoint le tournoi avec succès"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Vous participez déjà à ce tournoi"
                        }
                      },
                      "required": [
                        "message"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Ce tournoi est complet"
                        }
                      },
                      "required": [
                        "message"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/tournaments/{id}/leave": {
      "delete": {
        "operationId": "tournaments.leave",
        "summary": "Quitter un tournoi",
        "tags": [
          "Tournament"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Vous avez quitté le tournoi avec succès"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Vous ne participez pas à ce tournoi"
                        }
                      },
                      "required": [
                        "message"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "En tant qu'organisateur, vous ne pouvez pas quitter le tournoi. Vous devez le supprimer ou transférer l'organisation."
                        }
                      },
                      "required": [
                        "message"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          }
        }
      }
    },
    "/tournaments/{id}/video": {
      "post": {
        "operationId": "tournaments.add-video",
        "summary": "Ajouter une vidéo de replay au tournoi",
        "tags": [
          "Tournament"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "video_url": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "required": [
                  "video_url"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Vidéo ajoutée avec succès"
                    },
                    "tournament": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "tournament"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Vous n'êtes pas autorisé à ajouter une vidéo à ce tournoi"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/users/me": {
      "get": {
        "operationId": "users.me.profile",
        "summary": "Retourne les données de l'utilisateur actuellement connecté",
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "id": {
                      "type": "string"
                    },
                    "nom": {
                      "type": "string"
                    },
                    "prenoms": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "avatar": {
                      "type": "string"
                    },
                    "bio": {
                      "type": "string"
                    },
                    "ville": {
                      "type": "string"
                    },
                    "discipline": {
                      "type": "string"
                    },
                    "niveau": {
                      "type": "string"
                    },
                    "telephone": {
                      "type": "string"
                    },
                    "followersCount": {
                      "type": "string"
                    },
                    "followingCount": {
                      "type": "string"
                    },
                    "postsCount": {
                      "type": "string"
                    },
                    "total_distance": {
                      "type": "string"
                    },
                    "battery_level": {
                      "type": "string"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "id",
                    "nom",
                    "prenoms",
                    "email",
                    "avatar",
                    "bio",
                    "ville",
                    "discipline",
                    "niveau",
                    "telephone",
                    "followersCount",
                    "followingCount",
                    "postsCount",
                    "total_distance",
                    "battery_level",
                    "created_at",
                    "updated_at"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string",
                      "example": "Une erreur est survenue lors de la récupération des données utilisateur"
                    }
                  },
                  "required": [
                    "success",
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}/details": {
      "get": {
        "operationId": "users.details",
        "summary": "Affiche un utilisateur spécifique avec des détails supplémentaires",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "user": {
                      "type": "string"
                    },
                    "isFollowing": {
                      "type": "string"
                    },
                    "followersCount": {
                      "type": "string"
                    },
                    "followingCount": {
                      "type": "string"
                    },
                    "postsCount": {
                      "type": "string"
                    },
                    "eventsCount": {
                      "type": "string"
                    },
                    "tournamentsCount": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "user",
                    "isFollowing",
                    "followersCount",
                    "followingCount",
                    "postsCount",
                    "eventsCount",
                    "tournamentsCount"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "operationId": "users.index",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "`UserCollection`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UserCollection"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          }
        }
      },
      "post": {
        "operationId": "users.store",
        "tags": [
          "User"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserStoreRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "`UserResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UserResource"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/users/{user}": {
      "get": {
        "operationId": "users.show",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "user",
            "in": "path",
            "required": true,
            "description": "The user ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "`UserResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UserResource"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          }
        }
      },
      "put": {
        "operationId": "users.update",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "user",
            "in": "path",
            "required": true,
            "description": "The user ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "`UserResource`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/UserResource"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      },
      "delete": {
        "operationId": "users.destroy",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "user",
            "in": "path",
            "required": true,
            "description": "The user ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "401": {
            "$ref": "#/components/responses/AuthenticationException"
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "PermissionCollection": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/PermissionResource"
        },
        "title": "PermissionCollection"
      },
      "PermissionResource": {
        "type": "string",
        "title": "PermissionResource"
      },
      "RoleCollection": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/RoleResource"
        },
        "title": "RoleCollection"
      },
      "RoleResource": {
        "type": "string",
        "title": "RoleResource"
      },
      "UserCollection": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/UserResource"
        },
        "title": "UserCollection"
      },
      "UserResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "nom": {
            "type": "string"
          },
          "prenoms": {
            "type": "string"
          },
          "name": {
            "type": [
              "string",
              "null"
            ]
          },
          "telephone": {
            "type": [
              "string",
              "null"
            ]
          },
          "email": {
            "type": "string"
          },
          "google_id": {
            "type": [
              "string",
              "null"
            ]
          },
          "avatar": {
            "type": [
              "string",
              "null"
            ]
          },
          "bio": {
            "type": [
              "string",
              "null"
            ]
          },
          "total_distance": {
            "type": "number"
          },
          "battery_level": {
            "type": "integer"
          },
          "location": {
            "type": [
              "array",
              "null"
            ],
            "items": {}
          },
          "dark_mode": {
            "type": "boolean"
          },
          "settings": {
            "type": [
              "array",
              "null"
            ],
            "items": {}
          },
          "email_verified_at": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "created_at": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "updated_at": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "nom",
          "prenoms",
          "name",
          "telephone",
          "email",
          "google_id",
          "avatar",
          "bio",
          "total_distance",
          "battery_level",
          "location",
          "dark_mode",
          "settings",
          "email_verified_at",
          "created_at",
          "updated_at"
        ],
        "title": "UserResource"
      },
      "UserStoreRequest": {
        "type": "object",
        "properties": {
          "nom": {
            "type": "string",
            "maxLength": 255
          },
          "prenoms": {
            "type": "string",
            "maxLength": 255
          },
          "telephone": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 255
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "nom",
          "prenoms",
          "email",
          "password"
        ],
        "title": "UserStoreRequest"
      },
      "UserUpdateRequest": {
        "type": "object",
        "properties": {
          "nom": {
            "type": "string",
            "maxLength": 255
          },
          "prenoms": {
            "type": "string",
            "maxLength": 255
          },
          "telephone": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 255
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": [
              "string",
              "null"
            ]
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "nom",
          "prenoms",
          "email"
        ],
        "title": "UserUpdateRequest"
      }
    },
    "responses": {
      "ValidationException": {
        "description": "Validation error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Errors overview."
                },
                "errors": {
                  "type": "object",
                  "description": "A detailed description of each field that failed validation.",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "required": [
                "message",
                "errors"
              ]
            }
          }
        }
      },
      "AuthenticationException": {
        "description": "Unauthenticated",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error overview."
                }
              },
              "required": [
                "message"
              ]
            }
          }
        }
      },
      "ModelNotFoundException": {
        "description": "Not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error overview."
                }
              },
              "required": [
                "message"
              ]
            }
          }
        }
      },
      "AuthorizationException": {
        "description": "Authorization error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error overview."
                }
              },
              "required": [
                "message"
              ]
            }
          }
        }
      }
    }
  }
}